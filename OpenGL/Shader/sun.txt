#version 330 core
out vec4 FragColor;

in vec3 FragPos;
in vec3 Normal;
in vec2 TexCoords;

uniform sampler2D textureSampler; // Texture sampler

uniform vec3 lightColor;
uniform vec3 objectColor;
uniform vec3 lightPos;

uniform float emissiveStrength; // Emissive property

void main()
{
    vec3 lightDir = normalize(lightPos - FragPos);
    float diff = max(dot(Normal, lightDir), 0.0);
    vec3 diffuse = diff * lightColor * objectColor;

    vec3 emissive = emissiveStrength * objectColor; // Emissive contribution

    // Sample texture color
    vec3 textureColor = texture(textureSampler, TexCoords).rgb;

    // Combine texture color with emissive and diffuse contributions
    vec3 finalColor = textureColor * (diffuse + emissive);

    FragColor = vec4(finalColor, 1.0);
}
